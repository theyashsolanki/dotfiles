# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $super Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: source code pro 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status


# Use Mouse+$super to drag floating windows to their wanted position
floating_modifier $super

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $super+Return exec kitty

# kill focused window
bindsym $super+q kill

# start dmenu (a program launcher)
bindsym $super+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $super+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $super+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $super+l focus left
bindsym $super+j focus down
bindsym $super+k focus up
bindsym $super+h focus right

# alternatively, you can use the cursor keys:
bindsym $super+Left focus left
bindsym $super+Down focus down
bindsym $super+Up focus up
bindsym $super+Right focus right

# move focused window
bindsym $super+Shift+Left move left
bindsym $super+Shift+Down move down
bindsym $super+Shift+Up move up
bindsym $super+Shift+Right move right
bindsym $super+Shift+h move left
bindsym $super+Shift+j move down
bindsym $super+Shift+k move up
bindsym $super+Shift+l move right


# split in horizontal orientation
# bindsym $super+h split h

# split in vertical orientation
bindsym $super+v split v

# enter fullscreen mode for the focused container
bindsym $super+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $super+s layout stacking
bindsym $super+t layout tabbed
bindsym $super+e layout toggle split

# toggle tiling / floating
bindsym $super+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $super+space focus mode_toggle

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $super+minus scratchpad show; move position center

# focus the parent container
bindsym $super+a focus parent

# focus the child container
#bindsym $super+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $alt+Control+Right workspace next
bindsym $alt+Control+Left workspace prev
bindsym $super+1 workspace 1
bindsym $super+2 workspace 2
bindsym $super+3 workspace 3
bindsym $super+4 workspace 4
bindsym $super+5 workspace 5
bindsym $super+6 workspace 6
bindsym $super+7 workspace 7
bindsym $super+8 workspace 8

# move focused container to workspace
bindsym $super+Shift+1 move container to workspace 1
bindsym $super+Shift+2 move container to workspace 2
bindsym $super+Shift+3 move container to workspace 3
bindsym $super+Shift+4 move container to workspace 4
bindsym $super+Shift+5 move container to workspace 5
bindsym $super+Shift+6 move container to workspace 6
bindsym $super+Shift+7 move container to workspace 7
bindsym $super+Shift+8 move container to workspace 8

# Move to workspace with focused container
bindsym $alt+Shift+1 move container to workspace 1; workspace 1
bindsym $alt+Shift+2 move container to workspace 2; workspace 2
bindsym $alt+Shift+3 move container to workspace 3; workspace 3
bindsym $alt+Shift+4 move container to workspace 4; workspace 4
bindsym $alt+Shift+5 move container to workspace 5; workspace 5
bindsym $alt+Shift+6 move container to workspace 6; workspace 6
bindsym $alt+Shift+7 move container to workspace 7; workspace 7
bindsym $alt+Shift+8 move container to workspace 8; workspace 8

# reload the configuration file
bindsym $super+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $super+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $super+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $super+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $super+r mode "default"
}

bindsym $super+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}


gaps inner 0
gaps outer 0

smart_gaps on
smart_borders on

# Set shut down, restart and locking features
bindsym $super+0 mode "$mode_system"
set $mode_system (l)ock, (s)uspend, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym s exec i3lock && systemctl suspend, mode "default"
    bindsym l exec dm-tool lock, mode "default"
    bindsym Shift+r exec reboot, mode "default"
    bindsym Shift+s exec shutdown now, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

for_window [class=".*"] border pixel 3
assign [class=discord] 3

# keybindings for app
bindsym $super+b exec --no-startup-id firefox
bindsym $super+g exec --no-startup-id discord


# autostart
exec --no-startup-id i3-msg 'workspace 1'; exec /usr/bin/kitty -e tmux new-session -d
exec --no-startup-id /usr/bin/kitty
exec --no-startup-id sh -c "sleep 3; i3-msg 'workspace 2'; exec /usr/bin/firefox"
exec --no-startup-id sh -c "sleep 5; exec /usr/bin/discord"
exec --no-startup-id ~/.fehbg
exec --no-startup-id picom -b
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &


# workspace bindings for num keys
bindcode $super+87 workspace 1
bindcode $super+88 workspace 2
bindcode $super+89 workspace 3
bindcode $super+83 workspace 4
bindcode $super+84 workspace 5
bindcode $super+85 workspace 6
bindcode $super+79 workspace 7
bindcode $super+80 workspace 8
bindcode $super+81 workspace 9
bindcode $super+90 workspace 10

# move focused container to workspace for num keys
bindcode $super+Shift+87 move container to workspace 1
bindcode $super+Shift+88 move container to workspace 2
bindcode $super+Shift+89 move container to workspace 3
bindcode $super+Shift+83 move container to workspace 4
bindcode $super+Shift+84 move container to workspace 5
bindcode $super+Shift+85 move container to workspace 6
bindcode $super+Shift+79 move container to workspace 7
bindcode $super+Shift+80 move container to workspace 8
bindcode $super+Shift+81 move container to workspace 9
bindcode $super+Shift+90 move container to workspace 10

# Move to workspace with focused container for num keys
bindcode $alt+Shift+87 move container to workspace 1; workspace 1
bindcode $alt+Shift+88 move container to workspace 2; workspace 2
bindcode $alt+Shift+89 move container to workspace 3; workspace 3
bindcode $alt+Shift+83 move container to workspace 4; workspace 4
bindcode $alt+Shift+84 move container to workspace 5; workspace 5
bindcode $alt+Shift+85 move container to workspace 6; workspace 6
bindcode $alt+Shift+79 move container to workspace 7; workspace 7
bindcode $alt+Shift+80 move container to workspace 8; workspace 8
bindcode $alt+Shift+81 move container to workspace 9; workspace 9
bindcode $alt+Shift+90 move container to workspace 10; workspace 10

# scratchpad
# set $scratchpad_id 0
for_window [class="dropdown*"] floating enable 
for_window [class="dropdown*"] resize set 1000 800
for_window [class="dropdown*"] move scratchpad
for_window [class="dropdown*"] border pixel 5

exec_always --no-startup-id pgrep -f '^kitty --class dropdown1' || kitty --class dropdown1
bindsym $super+bracketleft [class="dropdown1"] scratchpad show; [class="dropdown1"] move position center

# exec_always --no-startup-id pgrep -f '^kitty --class dropdown2' || kitty --class dropdown2 -e htop
# bindsym $super+Shift+parenright [class="dropdown2"] scratchpad show; [class="dropdown2"] move position center
#
# exec_always --no-startup-id pgrep -f '^kitty --class dropdown3' || kitty --class dropdown3 -e ranger
# bindsym $super+bracketright [class="dropdown3"] scratchpad show; [class="dropdown3"] move position center

for_window [class="math"] floating enable
for_window [class="math"] resize set 800 500
for_window [class="math"] move scratchpad
for_window [class="math"] border pixel 5

exec_always --no-startup-id pgrep -f '^kitty --class math' || kitty --class math -e python -q 
bindsym $super+backslash [class="math"] scratchpad show; [class="math"] move position center 

# colour of border, background, text, indicator, and child_border
# client.focused              #bf616a #2f343f #d8dee8 #bf616a #00FFFF
# client.focused_inactive     #2f343f #2f343f #d8dee8 #2f343f #2f343f
# client.unfocused            #2f343f #2f343f #d8dee8 #2f343f #2f343f
# client.urgent               #2f343f #2f343f #d8dee8 #2f343f #2f343f
# client.placeholder          #2f343f #2f343f #d8dee8 #2f343f #2f343f
# client.background           #2f343f


# Brightness controls
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
